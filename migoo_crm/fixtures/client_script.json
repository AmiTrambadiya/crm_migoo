[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.382592",
  "module": "Migoo CRM",
  "name": "Raw Data ListView Button",
  "script": "frappe.listview_settings['Raw Data'] = {\n    onload: function (listview) {\n        listview.page.add_action_item(\"Send Whatsapp Template\", function () {\n            test(listview);\n        });;\n    },\n};\nfunction test(listview) {\n    let names = [];\n    $.each(listview.get_checked_items(), function (key, value) {\n        names.push(value.name);\n    });\n    if (names.length === 0) {\n        frappe.throw(__(\"No rows selected.\"));\n    }\n\n    template = [];\n    frappe.call({\n        method: 'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n        args: {\n            'doctype': 'Opportunity'\n        },\n        freeze: true,\n        callback: (r) => {\n            for (let i = 0; i < r.message.length; i++) {\n                template.push(r.message[i])\n            }\n            template.append[\"new add\"]\n        },\n        error: (r) => {\n            frappe.msgprint('somthing want wrong!');\n        }\n    });\n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n            },\n            {\n                label: 'Select Template',\n                fieldname: 'select_template',\n                fieldtype: 'Select',\n                options: template,\n                depends_on: \"eval:(doc.select_message_type == 'Template')\"\n            }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n            frappe.call({\n                method: 'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                args: {\n                    'template_name': values['select_template'],\n                    'doctype': 'Opportunity',\n                    'name': names\n                },\n                freeze: true,\n                callback: (r) => {\n                    frappe.msgprint('message sent');\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n            });\n            d1.hide();\n        }\n\n    });\n    d1.show();\n\n    console.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.114911",
  "module": "Migoo CRM",
  "name": "Raw Data-Full Name",
  "script": "frappe.ui.form.on('Raw Data',  \"first_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})\nfrappe.ui.form.on('Raw Data', \"middle_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})\nfrappe.ui.form.on('Raw Data', \"last_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-02-16 16:12:13.600823",
  "module": "Migoo CRM",
  "name": "Supplier Form Setting",
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh(frm) {\n\t\t$(\".form-shared\").hide();\n\t\t$(\".form-tags\").hide();\n\t\t$(\".form-sidebar-stats\").hide();\n\t\t// \t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n\n\t\tif (frappe.user.has_role(\"Migoo Approver\") === true) {\n\t\t\tconsole.log(\"Migoo Approver\");\n\t\t\tfrm.add_custom_button(__('Create_User'),\n\t\t\t\tfunction () {\n\t\t\t\t\tfrappe.new_doc(\"User\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"username\": frm.doc.email,\n\t\t\t\t\t\t\t\"first_name\": frm.doc.supplier_name,\n\t\t\t\t\t\t\t\"role_profile_name\": \"Vendor\",\n\t\t\t\t\t\t\t\"module_profile\": \"Vendor\",\n\t\t\t\t\t\t\t\"middle_name\": frm.doc.name,\n\t\t\t\t\t\t\t\"mobile_no\": frm.doc.mobile_number,\n\t\t\t\t\t\t\t\"phone\": frm.doc.phone_no,\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"Vendor\") === true) {\n\t\t\tcur_frm.set_df_property(\"verify\", \"hidden\", 1);\n\t\t\t$(\".form-assignments\").hide();\n\t\t\t$(\".form-attachments\").hide();\n\t\t\t$(\".form-shared\").hide();\n\t\t\t$(\".form-tags\").hide();\n\t\t\t$(\".form-sidebar-stats\").hide();\n\t\t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n\t\t}\n\t\telse {\n\t\t\tcur_frm.set_df_property(\"verify\", \"hidden\", 0);\n\t\t}\n\t\t// $(\".form-assignments\").hide();\n\t\t// \t\t$(\".form-attachments\").hide();\n\t\tif (frappe.user.has_role(\"Vendor\") === false) {\n\t\t\tfrm.add_custom_button(__('Equipment'),\n\t\t\t\tfunction () {\n\n\t\t\t\t\tfrappe.new_doc(\"Item\", {\n\t\t\t\t\t\t\"supplier\": frm.doc.name,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t},\n\n\n\tbefore_save: function (frm) {\n\t\tif (cur_frm.doc.verify == \"Not Verify\") {\n\t\t\tcur_frm.set_value(\"disabled\", 1);\n\t\t\tcur_frm.set_df_property(\"disabled\", \"read_only\", 1);\n\t\t}\n\n\t\tif (cur_frm.doc.verify == \"Verify\") {\n\t\t\t// cur_frm.set_value(\"disabled\",\"\");\n\t\t\tcur_frm.set_df_property(\"disabled\", \"read_only\", 0);\n\t\t}\n\n\t\tvar nm = frm.doc.name_of_suppier\n\t\tcur_frm.set_value(\"supplier_name\", nm)\n\t\t// alert(frm.doc.supplier_name)\n\n\t\tif (frappe.user.has_role(\"Vendor\") === true) {\n\t\t\tfrm.set_value(\"verify\", \"Not Verify\")\n\t\t}\n\t\telse {\n\t\t\tfrm.set_value(\"verify\", \"Verify\")\n\t\t}\n\t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-02-06 10:59:55.178541",
  "module": "Migoo CRM",
  "name": "Supplier Button Hide",
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh:function(frm) {\n\n\t   if(frappe.user.has_role(\"Vendor\") === true)\n\t     {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Accounting Ledger',\"View\"); \n\t        frm.remove_custom_button('Accounts Payable',\"View\"); \n\t        frm.remove_custom_button('Bank Account',\"Create\"); \n\t        frm.remove_custom_button('Pricing Rule',\"Create\"); \n\t        frm.remove_custom_button('enable_common_party_accounting',\"Actions\"); \n\t        frm.remove_custom_button('Get Supplier Group Details',\"Actions\"); \n\t         },0);  \n\t    }\n\t    else  if(frappe.user.has_role(\"Migoo Approver\") === true)\n\t     {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Accounting Ledger',\"View\"); \n\t        frm.remove_custom_button('Accounts Payable',\"View\"); \n\t        frm.remove_custom_button('Bank Account',\"Create\"); \n\t        frm.remove_custom_button('Pricing Rule',\"Create\"); \n\t        frm.remove_custom_button('enable_common_party_accounting',\"Actions\"); \n\t       // frm.remove_custom_button('Get Supplier Group Details',\"Actions\"); \n\t         },0);  \n\t    }\n\t    else{\n\t        frm.add_custom_button(__('Accounting Ledger'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'General Ledger',\n\t\t\t\t\t{ party_type: 'Supplier', party: frm.doc.name });\n\t\t\t}, __(\"View\"));\n\n\t\t\tfrm.add_custom_button(__('Accounts Payable'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'Accounts Payable', { supplier: frm.doc.name });\n\t\t\t}, __(\"View\"));\n\n\t\t\tfrm.add_custom_button(__('Bank Account'), function () {\n\t\t\t\terpnext.utils.make_bank_account(frm.doc.doctype, frm.doc.name);\n\t\t\t}, __('Create'));\n\n\t\t\tfrm.add_custom_button(__('Pricing Rule'), function () {\n\t\t\t\terpnext.utils.make_pricing_rule(frm.doc.doctype, frm.doc.name);\n\t\t\t}, __('Create'));\n\n\t\t\tfrm.add_custom_button(__('Get Supplier Group Details'), function () {\n\t\t\t\tfrm.trigger(\"get_supplier_group_details\");\n\t\t\t}, __('Actions'));\n\t    }\n\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-02-06 11:03:05.611575",
  "module": "Migoo CRM",
  "name": "Supplier List View",
  "script": "frappe.listview_settings['Supplier'] = {\n\tget_indicator: function(doc) {\n\t\tvar indicator = [(doc.verify), frappe.utils.guess_colour(doc.verify), \"verify,=,\" + doc.verify];\n\t\tif(doc.verify==\"Verify\") \n\t\t{\n\t\t\tindicator[1] = \"green\";\n\t\t}\n\t\tif(doc.verify==\"Not Verify\") \n\t\t{\n\t\t\tindicator[1] = \"red\";\n\t\t}\n\t\treturn indicator;\n\t},\n\tonload:function(doc) \n\t{\n\t    if(frappe.user.has_role(\"Vendor\") === true){\n\t        \n\t        $('.btn-primary').hide();\n\t    }    \n\t},\n\trefresh: function(listview) {\n\t    if (frappe.user.has_role(\"Vendor\")===true){\n    \t    $(\".btn-primary\").hide();\n\t    }\n\t}\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "User",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.176707",
  "module": "Migoo CRM",
  "name": "User Email Set",
  "script": "frappe.ui.form.on('User', {\n    \tonload:function(frm) \n\t\t{\n    \t    var a = frm.doc.username;\n    \t    frm.set_value(\"email\",a);\n    \t    cur_frm.set_df_property(\"middle_name\", \"hidden\",1);\n    \t},\n    \trefresh:function(frm){\n    \t    cur_frm.set_df_property(\"middle_name\", \"hidden\",1);\n    \t},\n    \temail:function(frm) \n    \t{\n\t    frm.set_value(\"username\", frm.doc.email);\n    \t    \n    \t},\n    \tafter_save:function(frm)\n    \t{\n    \t    console.log(\"aa\");\n    \t    if(frm.doc.middle_name != null)\n    \t\t{\n    \t\t  \n    \t\t  var user= cur_frm.doc.email;\n    \t\t  var supplier= cur_frm.doc.middle_name;  \n    \t\t  frappe.call({\n        \t  method:\"supplier\", \n        \t\t  args:{'user':user,\"supplier\":supplier},\n        \t\t  });\n    \t\t}\n    \t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-08 10:32:40.281222",
  "module": "Migoo CRM",
  "name": "Item Form Setting",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\t$(\".form-shared\").hide();\n\t\t$(\".form-tags\").hide();\n\t\t$(\".form-sidebar-stats\").hide();\n\n\t\tfrm.remove_custom_button('Add / Edit Prices', \"Actions\");\n\t\tfrm.remove_custom_button('Publish in Website', \"Actions\");\n\t\tif (frappe.user_roles.indexOf(\"Vendor\") == '0') {\n\n\t\t\t$(\".form-assignments\").hide();\n\t\t\t//\t$(\".form-attachments\").hide();\n\t\t\t$(\".form-shared\").hide();\n\t\t\t$(\".form-tags\").hide();\n\t\t\t$(\".form-sidebar-stats\").hide();\n\t\t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n\t\t\t$('.icon-btn').hide();\n\t\t}\n\n\t\tif (cur_frm.doc.equipment_verify == \"Not Verify\") {\n\t\t\t//   cur_frm.set_df_property(\"disabled\", \"read_only\",1);\n\t\t}\n\t\telse {\n\t\t\tcur_frm.set_df_property(\"disabled\", \"read_only\", 0);\n\t\t}\n\t\tif (frappe.user.has_role(\"Vendor\") === true) {\n\n\t\t\tcur_frm.set_df_property(\"equipment_verify\", \"read_only\", 1);\n\t\t\tsetTimeout(() => {\n\t\t\t\tconsole.log(\"View Hide\");\n\t\t\t\tfrm.remove_custom_button('Duplicate');\n\t\t\t\tfrm.remove_custom_button('...');\n\t\t\t\tfrm.remove_custom_button('Create Website Item')\n\n\t\t\t}, 0);\n\t\t}\n\t},\n\tequipment_main_category: function (frm, cdt, cdn) {\n\t\tvar a = frm.doc.equipment_main_category;\n\t\tcur_frm.set_query(\"equipment_brand\", function () {\n\t\t\treturn {\n\t\t\t\t\"filters\": {\n\t\t\t\t\t\"item_group_name\": a,\n\t\t\t\t}\n\n\t\t\t};\n\t\t});\n\t},\n\tbefore_save:function(frm) {\n\t\tif(frappe.user.has_role(\"Vendor\")===true){\n\t\t    frm.set_value(\"equipment_verify\", \"Not Verify\")\n\t\t}\n\t\telse{\n\t\t    frm.set_value(\"equipment_verify\", \"Verify\")\n\t\t      frm.set_df_property('supplier', 'reqd', 1)\n\t\t}\n\t}\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.060948",
  "module": "Migoo CRM",
  "name": "Equipment List Setting",
  "script": "frappe.listview_settings['Item'] = {\n\tonload:function(frm) {\n\t    $('#help-links').hide();\n\t},\n// \tget_indicator: function(doc) {\n// \t\tvar indicator = [(doc.equipment_status), frappe.utils.guess_colour(doc.equipment_status), \"equipment_status,=,\" + doc.equipment_status];\n// \t\tif(doc.equipment_status==\"Working\") \n// \t\t{\n// \t\t\tindicator[1] = \"green\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Breakdown\") \n// \t\t{\n// \t\t\tindicator[1] = \"red\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Ideal\") \n// \t\t{\n// \t\t\tindicator[1] = \"blue\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Occupied With Migoo\") \n// \t\t{\n// \t\t\tindicator[1] = \"cyan\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Occupied with Others\") \n// \t\t{\n// \t\t\tindicator[1] = \"orange\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Free\") \n// \t\t{\n// \t\t\tindicator[1] = \"yellow\";\n// \t\t}\n\n// \t\treturn indicator;\n// \t}\n    get_indicator: function(doc) {\n    \t\tvar indicator = [(doc.equipment_verify), frappe.utils.guess_colour(doc.equipment_verify), \"equipment_verify,=,\" + doc.equipment_verify];\n    \t\tif(doc.equipment_verify==\"Verify\") \n    \t\t{\n    \t\t\tindicator[1] = \"green\";\n    \t\t}\n    \t\tif(doc.equipment_verify==\"Not Verify\") \n    \t\t{\n    \t\t\tindicator[1] = \"red\";\n    \t\t}\n    \t\treturn indicator;\n    \t},\n\t     \n\trefresh:function(doc)\n\t{    $(\".sidebar-toggle-placeholder\").hide(\"sidebar-toggle-btn\")\n        $(\".layout-side-section\").hide();\n    \t$(\".layout-main-section-wrapper\").addClass(\"col-12\"); // this removes class \"col-md-10\" from content block, which sets width to 83%\n    \t \n\t}\n\n\t\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-02-06 12:23:39.284607",
  "module": "Migoo CRM",
  "name": "Lead Address",
  "script": "frappe.ui.form.on('Lead', {\n\tafter_save:function(frm) {\n\t\t    var name=cur_frm.doc.name;\n\t\t    var address_title=cur_frm.doc.name;\n\t        var address_line1= cur_frm.doc.address_line_1;\n\t        var address_line2= cur_frm.doc.address_line_2;\n\t        var area= cur_frm.doc.area;\n\t        var city= cur_frm.doc.city;\n\t        var state= cur_frm.doc.state;\n\t        var postal_code= cur_frm.doc.postal_code;\n\t        if(address_title!=null){\n\t             frappe.call({\n    \t\t        method:\"check_address_lead\", \n    \t\t        args: {\"name\":name},\n    \t\t    }).then(records => {\n\t                 var a=records[\"msg\"]\n    \t\t        alert(a)\n    \t\t        \n    \t\t        if(a!=\"\")\n    \t\t        {\n    \t        frappe.call({\n    \t\t        method:\"address\", \n    \t\t        args: {'address_title':address_title,\"address_line1\":address_line1,\"city\":city,\"state\":state,\"territory\":postal_code, \"area\":area, \"name\":name,\"address_line2\":address_line2},\n    \t\t    });\n    \t\t        }\n    \t\t    frm.refresh();\n\t        })\n\t        }\n\t}\n\t,refresh:function(frm){\n\t      $(\".document-link .icon-btn\").remove()\n\t    $(\".document-link .open-notification\").remove()\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.279556",
  "module": "Migoo CRM",
  "name": "Category Setting Item",
  "script": "frappe.ui.form.on('Item', {\n\trefresh:function(frm) {\n\t    cur_frm.set_query(\"item_group\", function() {\n    return {\n            \"filters\": {\n                \"parent_item_group\": \"All Equipment Groups\",\n            }\n        };\n    });\n\t    frm.set_query('equipment_main_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.item_group,\n\t\t\t\t    // \"is_group\": \"1\",\n\t\t\t\t    \n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n   \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Brand",
  "enabled": 0,
  "modified": "2023-02-04 16:12:49.153639",
  "module": "Migoo CRM",
  "name": "Brand Filter",
  "script": "frappe.ui.form.on('Brand', {\n\trefresh(frm) {\n\t\t  frm.set_query('equipment_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': \"All Equipment Groups\",\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t     \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Model No",
  "enabled": 0,
  "modified": "2023-02-04 16:12:49.165289",
  "module": "Migoo CRM",
  "name": "Model No Filter",
  "script": "frappe.ui.form.on('Model No', {\n\trefresh(frm) {\n\t\t  frm.set_query('equipment_main_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': \"All Equipment Groups\",\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_main_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_sub_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t   \n    },\n    equipment_sub_category:function(frm){\n\t    var category=cur_frm.doc.equipment_sub_category;\n\t     frappe.call({\n        \t  method:\"model_no\", \n        \t\t  args:{'category':category},\n        \t\t  }).then(records => {\n                // alert(records[\"message\"]);\n                var category1 = records[\"message\"];\n               \n                if(category1 > 0){\n                    \n                     cur_frm.set_df_property(\"equipment_category\", \"hidden\",0);\n                    \n                }\n    \t\t })\n\t\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-06 10:42:33.694037",
  "module": "Migoo CRM",
  "name": "Caputal Register no",
  "script": "frappe.ui.form.on('Item', {\n\tregister_no:function(frm) {\n\t    if (cur_frm.doc.register_no !=\"\"){\n\t        name=cur_frm.doc.register_no\n\t        frappe.call({\n\t\t        method:\"name\", \n\t\t        args: {'name1':name},\n\t\t    }).then(records => {\n                var name1 = records[\"message\"]\n                cur_frm.set_value(\"register_no\",name1)\n\t\t    });\n\t    }\n},\nequipment_model_no:function(frm) {\n\t    if (cur_frm.doc.equipment_model_no !=\"\"){\n\t        name=cur_frm.doc.equipment_model_no\n\t        frappe.call({\n\t\t        method:\"name\", \n\t\t        args: {'name1':name},\n\t\t    }).then(records => {\n                var name1 = records[\"message\"]\n                cur_frm.set_value(\"equipment_model_no\",name1)\n\t\t    });\n\t    }\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.269826",
  "module": "Migoo CRM",
  "name": "Naming seies of equipment",
  "script": "frappe.ui.form.on('Item', {\n\t\tbefore_save:function(frm) {\n\t    \n\t\tif(cur_frm.doc.item_group==\"Aerial Work Platform\") {\n          \n            var a=\"AERI-.####\";\n           cur_frm.set_value(\"naming_series\", a);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Concrete Machinery\") {\n          \n            var b=\"CONC-.####\";\n           cur_frm.set_value(\"naming_series\", b);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Cranes\") {\n          \n            var c=\"CRAN-.####\";\n           cur_frm.set_value(\"naming_series\", c);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Earth Moving Machinery\") {\n          \n            var d=\"EART-.####\";\n           cur_frm.set_value(\"naming_series\", d);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Lifting and Handling Machinery\") {\n          \n            var f=\"LIFT-.####\";\n           cur_frm.set_value(\"naming_series\", f);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Miscellaneous\") {\n          \n            var g=\"MISC-.####\";\n           cur_frm.set_value(\"naming_series\", g);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Plant Crushing and Screening\") {\n          \n            var h=\"PLAN-.####\";\n           cur_frm.set_value(\"naming_series\", h);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Road Machinery\") {\n          \n            var i=\"ROAD-.####\";\n           cur_frm.set_value(\"naming_series\", i);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Truck / Tanker / Trailor\") {\n          \n            var j=\"TRUC-.####\";\n           cur_frm.set_value(\"naming_series\", j);\n\t\t}\n      \t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.209119",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message For Lead",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Lead', {\n    refresh(frm) {\n        if(frm.doc.whatsapp_no){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp_no;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Lead'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('Message Sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp_no\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.187823",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message for Supplier",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Supplier', {\n    refresh(frm) {\n        if(frm.doc.whatsapp_no){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp_no;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Supplier'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n           console.log(\"template\", template)\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('message sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    console.log(\"template1\", template)\n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp_no\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Inquiry Form",
  "enabled": 1,
  "modified": "2023-02-13 15:44:09.144159",
  "module": "Migoo CRM",
  "name": "Inquiry Form for CRM",
  "script": "frappe.ui.form.on('Inquiry Form', {\n  refresh(frm) {\n    $(\".document-link .icon-btn\").remove()\n    $(\".document-link .open-notification\").remove()\n    // your code here\n    frm.add_custom_button(__('Lead'), function () {\n\n      var request = frm.doc.request;\n      var fname = frm.doc.first_name;\n      var lname = frm.doc.last_name;\n      var company = frm.doc.company_name;\n      var email = frm.doc.email_address;\n      var mobile = frm.doc.mobile_no;\n      var notes = frm.doc.supplier_notes;\n      var items = frm.doc.item_details;\n      var date = frm.doc.curdate\n      var wp = frm.doc.wpnumber\n      var inquiry_source = frm.doc.inquiry_source\n      var a = wp\n      var aa = items\n      var id = frm.doc.name\n\n      if (a == null) {\n        // alert(\"null\")\n        var d = \"\";\n      }\n      else {\n        // alert(\" Not null\")\n        var d = a;\n      }\n      if (aa == null) {\n\n        var dd = \"\";\n      }\n      else {\n\n        var dd = aa;\n      }\n      if (company == null) {\n        var c = \"\";\n      }\n      else {\n        var c = company\n      }\n      if (notes == null) {\n        var n = \"\";\n      }\n      else {\n        var n = notes;\n      }\n      frappe.call({\n        method: \"inquiry\",\n        args: {\n          \"request\": request,\n          \"fname\": fname,\n          \"lname\": lname,\n          \"company\": c,\n          \"email\": email,\n          \"mobile\": mobile,\n          \"notes\": n,\n          \"equipment\": dd,\n          \"date\": date,\n          \"watsappno\": d,\n          \"inquiry_source\": inquiry_source,\n          \"inquiry_connect\": id\n        }\n      });\n\n    });\n  }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-06 10:35:12.647048",
  "module": "Migoo CRM",
  "name": "Google Location",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\tdocument.querySelectorAll(\"[data-fieldname='equipment_location']\")[1].id = \"autocomplete\";\n\t\tvar script = document.createElement('script');\n\t\tscript.type = 'text/javascript';\n\t\tscript.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyC_iBGslaXogM6MssBSkRrGKDRQ2YcPD_Q&libraries=places';\n\t\tdocument.head.appendChild(script);\n\t},\n\tequipment_location: function (frm) {\n\t\tvar autocomplete = new google.maps.places.Autocomplete((document.getElementById('autocomplete')), {\n\t\t\ttypes: ['geocode'],\n\t\t});\n\n\t\tgoogle.maps.event.addListener(autocomplete, 'load', function () {\n\t\t\tvar near_place = autocomplete.getPlace();\n\t\t});\n\t},\n\n\tbefore_save: function (frm) {\n\t\tvar places = document.getElementById('autocomplete').value\n\t\tfrm.set_value(\"equipment_location\", places)\n\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.197736",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Supplier List",
  "script": "frappe.listview_settings['Supplier'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Supplier'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Supplier',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.218693",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Lead List",
  "script": "frappe.listview_settings['Lead'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Lead'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Lead',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.239929",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message For Opportunity",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Opportunity', {\n    refresh(frm) {\n        if(frm.doc.whatsapp){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Opportunity'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n           console.log(\"template\", template)\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('Message Sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    console.log(\"template1\", template)\n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.228419",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Opportunity List",
  "script": "frappe.listview_settings['Opportunity'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Opportunity'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                    template.append[\"new add\"]\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Opportunity',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.250633",
  "module": "Migoo CRM",
  "name": "Opportunity save",
  "script": "frappe.ui.form.on('Opportunity', {\n\tonload(frm) {\n\t\tif (!frm.is_new()) {\n\t\t  //  alert(\"Save\")\n        //  frm.add_custom_button('Click me', () => console.log('Clicked custom button'))\n        cur.frm.save()\n}\n\n\t}\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Website Item",
  "enabled": 0,
  "modified": "2023-02-04 16:12:49.298706",
  "module": "Migoo CRM",
  "name": "Supplier details fetch",
  "script": "frappe.ui.form.on('Website Item', {\n\tonload:function(frm) {\n\t    var item =cur_frm.doc.item_code;\n\t    alert(item)\n\t    frappe.call({\n\t        method:\"suppler_mo_no\",\n\t        args:{\"item\":item},\n\t    }).then(records => {\n\t\t      //  cur_frm.set_value(\"register_no\",\"\")\n                var name1 = records[\"message\"]\n                var no = records[\"msg\"]\n                cur_frm.set_value(\"supplier_name\",name1)\n                cur_frm.set_value(\"supplier_number\",no)\n\t\t    });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-06 10:40:36.556251",
  "module": "Migoo CRM",
  "name": "Create website item",
  "script": "frappe.ui.form.on('Item', {\n\trefresh: function (frm) {\n\n\t\tvar a = frm.doc.equipment_for_sell;\n\t\tvar b = frm.doc.equipment_verify;\n\n\t\tif (a == 1 && b == \"Verify\") {\n\t\t\tfrm.add_custom_button(__(\"Create Website Item\"),\n\t\t\t\tfunction () {\n\t\t\t\t\tvar c = frm.doc.maker_model;\n\t\t\t\t\tvar m = frm.doc.fitness_dt\n\t\t\t\t\tif (c == null) {\n\n\t\t\t\t\t\tvar d = \"g \";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\n\t\t\t\t\t\tvar d = c;\n\t\t\t\t\t}\n\t\t\t\t\tif (m == null) {\n\n\t\t\t\t\t\tvar n = \"m \";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvar n = m;\n\t\t\t\t\t}\n\t\t\t\t\tvar name = cur_frm.doc.name;\n\n\t\t\t\t\tvar item_group = cur_frm.doc.item_group;\n\n\t\t\t\t\tvar sub = cur_frm.doc.equipment_main_category;\n\t\t\t\t\tvar price = cur_frm.doc.standard_rate;\n\n\t\t\t\t\tvar maker_model = maker_model;\n\n\t\t\t\t\tvar vehicle_class = cur_frm.doc.vehicle_class;\n\t\t\t\t\tvar owner_count = cur_frm.doc.owner_count;\n\t\t\t\t\tvar insurance_date = cur_frm.doc.insurance_date;\n\n\t\t\t\t\tvar fitness_dt = fitness_dt;\n\n\t\t\t\t\tvar manufacturing_date = cur_frm.doc.manufacturing_date;\n\t\t\t\t\tvar registration_date = cur_frm.doc.registration_date;\n\t\t\t\t\tvar model = cur_frm.doc.model;\n\n\t\t\t\t\tvar equipment_condition = cur_frm.doc.equipment_condition;\n\t\t\t\t\tvar equipment_current_reading = cur_frm.doc.equipment_current_reading;\n\t\t\t\t\tvar short_description = cur_frm.doc.short_description;\n\t\t\t\t\tvar description = cur_frm.doc.description;\n\n\t\t\t\t\tvar location = cur_frm.doc.equipment_location;\n\t\t\t\t\tvar img1 = frm.doc.right_picture;\n\t\t\t\t\tvar img2 = frm.doc.front_picture;\n\t\t\t\t\tvar img3 = frm.doc.left_picture;\n\t\t\t\t\tif (vehicle_class == null) {\n\t\t\t\t\t\tvar vehicle_class1 = '';\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvehicle_class1 = vehicle_class\n\t\t\t\t\t}\n\t\t\t\t\tif (maker_model == null) {\n\t\t\t\t\t\tvar maker_model1 = ''\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmaker_model1 = maker_model\n\t\t\t\t\t}\n\t\t\t\t\tif (owner_count == null) {\n\t\t\t\t\t\tvar owner_count1 = ''\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\towner_count1 = owner_count\n\t\t\t\t\t}\n\t\t\t\t\tif (fitness_dt == null) {\n\t\t\t\t\t\tvar fitness_dt1 = ''\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfitness_dt1 = fitness_dt\n\t\t\t\t\t}\n\t\t\t\t\tif (insurance_date == null) {\n\t\t\t\t\t\tvar insurance_date1 = ''\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinsurance_date1 = insurance_date\n\t\t\t\t\t}\n\t\t\t\t\tif (manufacturing_date == null) {\n\t\t\t\t\t\tvar manufacturing_date1 = ''\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmanufacturing_date1 = manufacturing_date\n\t\t\t\t\t}\n\t\t\t\t\tif (registration_date == null) {\n\t\t\t\t\t\tvar registration_date1 = ''\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tregistration_date1 = registration_date\n\t\t\t\t\t}\n\t\t\t\t\tif (model == null) {\n\t\t\t\t\t\tvar model1 = ''\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmodel1 = model\n\t\t\t\t\t}\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"website_item\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t'name': name, 'item_group': item_group,\n\t\t\t\t\t\t\t'standard_rate': price, 'maker_model': maker_model1, 'vehicle_class': vehicle_class1,\n\t\t\t\t\t\t\t'owner_count': owner_count1, 'model': model1, 'sub': sub, 'fitness_dt': fitness_dt1, 'insurance_date': insurance_date1,\n\t\t\t\t\t\t\t'manufacturing_date': manufacturing_date1, 'registration_date': registration_date1, 'equipment_condition': equipment_condition,\n\t\t\t\t\t\t\t'equipment_current_reading': equipment_current_reading, 'location': location, 'short_description': short_description,\n\t\t\t\t\t\t\t'description': description, 'img1': img1, 'img2': img2, 'img3': img3\n\t\t\t\t\t\t}\n\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t}\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.075955",
  "module": "Migoo CRM",
  "name": "Equipment fetch data button CSS",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tvar element = document.querySelectorAll(\".form-section\")[1];\n\t\telement.classList.add(\"section-no\");\n\t\tset_css_1(frm);\n\t}\n})\nfunction set_css_1(frm){\n\tconsole.log(\"set_css\");\n    document.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.backgroundColor = '#0275d8'\n\tdocument.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.color = '#fff'\n// \tdocument.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.marginTop = '25px'\n\tconsole.log(\"End_set_css\");\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-02-09 10:49:22.801859",
  "module": "Migoo CRM",
  "name": "Prospect and Supplier create",
  "script": "frappe.ui.form.on('Lead', {\n\trefresh(frm) {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Prospect',\"Create\"); \n\t        frm.remove_custom_button('Add to Prospect', \"Action\");\n\t         },0);  \n\t         \n\t         \t\n\t    cur_frm.set_query(\"equipment_main_category\", function() {\n    return {\n            \"filters\": {\n                \"parent_item_group\": \"All Equipment Groups\",\n            }\n        };\n    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_main_category,\n\t\t\t\t    // \"is_group\": \"1\",\n\t\t\t\t    \n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n   \n\n\n\t\n\tvar a=frm.doc.company_name;\n\t    if(a !=\"\")\n\t    {\n\t        var b =\"Company\";\n\t        var c = frm.doc.company_name;\n\t    }\n\t    else\n\t    {\n\t        \n\t        b=\"Individual\";\n\t    }\n\t   var status=frm.doc.status\n\t   if(status==\"Interested\"){\n\t\tfrm.add_custom_button(__('Create Supplier'), function(){\n    \t\t frappe.new_doc(\"Supplier\", {\n    \t\t \"name_of_suppier\": frm.doc.lead_name,\n    \t\t \"email\":frm.doc.email_id,\n    \t\t \"supplier_type\":b,\n    \t\t \"phone_no\":frm.doc.phone,\n    \t\t \"email_id\":frm.doc.email_id,\n    \t\t \"mobile_number\":frm.doc.mobile_no,\n    \t\t \"whatsapp_number\":frm.doc.whatsapp_no,\n    \t\t \"country\":frm.doc.country,\n    \t\t \"company_name\":c,\n    \t\t \"address_line_1\":frm.doc.address_line_1,\n    \t\t \"address_line_2\":frm.doc.address_line_2,\n    \t\t \"area\":frm.doc.area,\n    \t\t \"postal_code\":frm.doc.postal_code,\n    \t\t \"city\":frm.doc.city,\n    \t\t \"state\":frm.doc.state_name,\n    \t\t });\n    \t\t \n\t\t \n\n\t\t});\n\t   }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.099651",
  "module": "Migoo CRM",
  "name": "Customer Connect With Inquiry Form",
  "script": "frappe.ui.form.on('Customer', {\ronload(frm) {\r    var a=rm.doc.lead_name\r    if(a!=\"\"){\r   frappe.call({\r            method: 'frappe.client.get_value',\r            args: {\r                'doctype': 'Lead',\r                'filters': {'name': frm.doc.lead_name},\r                'fieldname': \"inquiry_connect\"\r            },\r            callback: function(r) {\r               \r                    console.log(r.message);\r                    frm.set_value('inquiry_connect', r.message.inquiry_connect);\r                    alert(frm.doc.inquiry_connect)\r                    // frm.refresh_field(\"your_seed_license_code\");\r                  \r            }\r        });\r    }\r    var b=frm.doc.opportunity_name\r    if(b!=\"\"){\r        frappe.call({\r            method: 'frappe.client.get_value',\r            args: {\r                'doctype': 'Opportunity',\r                'filters': {'name': frm.doc.opportunity_name},\r                'fieldname': \"inquiry_connect\"\r            },\r            callback: function(r) {\r               \r                    console.log(r.message);\r                    frm.set_value('inquiry_connect', r.message.inquiry_connect);\r                    alert(frm.doc.inquiry_connect)\r                    // frm.refresh_field(\"your_seed_license_code\");\r                  \r            }\r        });\r    }\r    }\r \r})\r\r",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.318484",
  "module": "Migoo CRM",
  "name": "Supplier button in Raw Data",
  "script": "frappe.ui.form.on('Raw Data', {\n        refresh(frm) {\n\n                frm.add_custom_button(__('Supplier'), function () {\n\n                        frappe.new_doc(\"Supplier\",\n                                {\n                                        \"suppliername\": frm.doc.full_name,\n                                        \"address_title\": frm.doc.address_title,\n                                        \"address_line_1\": frm.doc.address_line_1,\n                                        \"address_line_2\": frm.doc.address_line_2,\n                                        \"city\": frm.doc.city,\n                                        \"state\": frm.doc.state,\n                                        \"location\": frm.doc.location,\n                                        \"pincode\": frm.doc.pincode,\n                                        \"mobile_number\": frm.doc.mobile_no,\n                                        \"ph\": frm.doc.phone_2,\n                                        \"whatsapp_no\": frm.doc.whatsapp_no,\n                                        \"email\": frm.doc.email,\n                                        \"website\": frm.doc.website,\n\n                                });\n\n                });\n\n        }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.362884",
  "module": "Migoo CRM",
  "name": "Opportunity Reference",
  "script": "frappe.ui.form.on('Opportunity', {\n\tbefore_save:function(frm){\n\t    if(frm.doc.opportunity_from==\"Lead\")\n\t    {\n\t    var a = frm.doc.party_name\n\t    var b = frm.doc.name\n\t    frappe.call({\n\t\t        method:\"opp_reference\", \n\t\t        args: {'name1':a,\"nm\":b},\n\t\t    }).then(records => {\n                var name1 = records[\"message\"]\n                var len = records[\"len\"]\n                // var nm = records[\"nm\"]\n        // frappe.msgprint(\"palak\")\n                let text = name1;\n                // var abc=nm.split(\",\")\n                var myArray = text.split(\",\");\n                 var child = frm.doc.reference.length\n\t    \n\t           if(child==\"\")\n\t           {\n\t               //alert(\"h\")\n                for(var a = 0;a < len; a++){\n                            var row = frappe.model.add_child(cur_frm.doc, \"Opportunity\", \"reference\");\n                            \n                            row.opportunity_nm = myArray[a]\n                            // row.date = abc[a]\n                            frm.refresh_fields(\"reference\");\n                            \n                }\n                cur_frm.save();\n\t            }\n\n\t\t    });\n\t\t    \n\t    }\n\t    \n\t   \n\t},\n\tvalidate:function(frm) {\n\t   // alert(\"call\")\n\t    var a= cur_frm.doc.opportunity_from\n\t   // alert(a)\n\t    var b= cur_frm.doc.party_name\n\t    if(a==null && b==null){\n\t        alert(\"Enter opportunity_from and party_name\")\n\t        validated=false\n\t    }\n\t    else{\n\t       // alert(\"else\")\n\t    }\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-02-06 11:13:03.320368",
  "module": "Migoo CRM",
  "name": "Create Supplier Address",
  "script": "frappe.ui.form.on('Supplier', {\n\tafter_save:function(frm) {\n\t\t    var name=cur_frm.doc.name;\n\t        var address_line1= cur_frm.doc.address_line_1;\n\t        var address_line2= cur_frm.doc.address_line_2;\n\t        var area= cur_frm.doc.city;\n\t        var city= cur_frm.doc.city;\n\t        var state= cur_frm.doc.state;\n\t        var contry = cur_frm.doc.country_name;\n\t        var postal_code= cur_frm.doc.postal_code;\n\t        if(address_line1!=null){\n\t            frappe.call({\n    \t\t        method:\"check_address\", \n    \t\t        args: {\"name\":name},\n    \t\t    }).then(records => {\n\t                 var a=records[\"data\"]\n    \t\t        \n    \t\t        if(a==\"\")\n    \t\t        {\n        \t\t        frappe.call({\n        \t\t        method:\"supplier_address\", \n        \t\t        args: {\"address_line1\":address_line1,\"city\":city,\"state\":state,\"postal_code\":postal_code, \"area\":area, \"name\":name,\"address_line2\":address_line2 ,\"pincode\":postal_code},\n        \t\t    });\n    \t\t            \n    \t\t        }\n    \t\t    })\n\t        }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Resource Planning",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.470218",
  "module": "Migoo CRM",
  "name": "resource planning",
  "script": "frappe.ui.form.on('Resource Planning', {\n// \trefresh(frm) {\n// \t\t// your code here\n// \t},\n\tend_date:function(frm){\n\t  \n\t    \n\t    if(frm.doc.end_date < frm.doc.start_date)\n\t    {\n\t        alert(\"please enter valid date\");\n\t        return false;\n\t    }\n\t    else if(frm.doc.end_date == frm.doc.start_date)\n\t    {\n\t        frm.set_value('total_days',frappe.datetime.get_day_diff(frm.doc.end_date ,frm.doc.start_date ))\n\t       //alert(\"please enter valid date\");\n\t    }\n\t    else\n\t    {\n\t   //  var totaldays = frappe.datetime.get_day_diff(frm.doc.end_date ,frm.doc.start_date )\n\t    frm.set_value('total_days',frappe.datetime.get_day_diff(frm.doc.end_date ,frm.doc.start_date ))\n\t   // alert(frm.doc.total_days)\n\t    }\n\t},\n\tsales_order:function(frm){\n\t  \n\t    var order=cur_frm.doc.sales_order;\n\t    frappe.call({\n            method:\"order\",\n            args:{\n                \"name\":order,\n            }\n\t    }).then(records => {\n\t       // alert(r.data)\n\t        var a=records[\"data\"]\n\t       // alert(typeof(a))\n\t        frm.set_query('equipment', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'item_code': [ 'in',a]\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    });\n\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Log Sheet",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.481077",
  "module": "Migoo CRM",
  "name": "Set Time",
  "script": "\nfrappe.ui.form.on('Log Sheet', {\nstart_time: function (cur_frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    var hours=0;\n    var minutes=0;\n    var seconds=0;\n    console.log(cdt, cdn, d.start_time, d.end_time, d.shift_hours);\n\n    if (d.start_time && d.end_time) {\n        \n\t\t\n\t    var hour1 = d.start_time.split(':')[0];\n        var hour2 = d.end_time.split(':')[0];\n        var min1 = d.start_time.split(':')[1];\n        var min2 = d.end_time.split(':')[1];\n\t\tvar sec1 = d.start_time.split(':')[2];\n        var sec2 = d.end_time.split(':')[2];\n\t\t\n\t\tvar diff_hour = hour2 - hour1;\n\t\tvar diff_min = min2 - min1;\n\t\tvar diff_sec = sec2 - sec1;\n\t\t\n\t\tif (diff_hour<0) {\n            diff_hour+= 24;\n        }\n        if (diff_min<0) {\n            diff_min+=60;\n            diff_hour--;\n        }if(diff_min>=60){\n            diff_min-=60;\n            diff_hour++;\n        }\n        if (diff_sec<0) {\n            diff_sec+=60;\n            diff_min--;\n        } else if(diff_sec>=60){\n            diff_sec-=60;\n            diff_min++;\n        }\n\t\n        \n       frappe.model.set_value(cdt,cdn,\"total_hoursmorning\",diff_hour+\":\"+diff_min+\":\"+diff_sec);\n\t   frm.refresh_field(\"total_hoursmorning\");\n    }\n},\nend_time: function (cur_frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    var hours=0;\n    var minutes=0;\n    var seconds=0;\n    console.log(cdt, cdn, d.start_time, d.end_time, d.shift_hours);\n\n    if (d.start_time && d.end_time) {\n        \n\t\t\n\t    var hour1 = d.start_time.split(':')[0];\n        var hour2 = d.end_time.split(':')[0];\n        var min1 = d.start_time.split(':')[1];\n        var min2 = d.end_time.split(':')[1];\n\t\tvar sec1 = d.start_time.split(':')[2];\n        var sec2 = d.end_time.split(':')[2];\n\t\t\n\t\tvar diff_hour = hour2 - hour1;\n\t\tvar diff_min = min2 - min1;\n\t\tvar diff_sec = sec2 - sec1;\n\t\t\n\t\tif (diff_hour<0) {\n            diff_hour+= 24;\n        }\n        if (diff_min<0) {\n            diff_min+=60;\n            diff_hour--;\n        }if(diff_min>=60){\n            diff_min-=60;\n            diff_hour++;\n        }\n        if (diff_sec<0) {\n            diff_sec+=60;\n            diff_min--;\n        } else if(diff_sec>=60){\n            diff_sec-=60;\n            diff_min++;\n        }\n\t\t\n      frappe.model.set_value(cdt,cdn,\"total_hoursmorning\",diff_hour+\":\"+diff_min+\":\"+diff_sec);\n\t   frm.refresh_field(\"total_hoursmorning\");\n    }\n},\nstarttime: function (cur_frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    var hours=0;\n    var minutes=0;\n    var seconds=0;\n    console.log(cdt, cdn, d.starttime, d.endtime, d.shift_hours);\n\n    if (d.starttime && d.endtime) {\n        \n\t\t\n\t    var hour1 = d.starttime.split(':')[0];\n        var hour2 = d.endtime.split(':')[0];\n        var min1 = d.starttime.split(':')[1];\n        var min2 = d.endtime.split(':')[1];\n\t\tvar sec1 = d.starttime.split(':')[2];\n        var sec2 = d.endtime.split(':')[2];\n\t\t\n\t\tvar diff_hour = hour2 - hour1;\n\t\tvar diff_min = min2 - min1;\n\t\tvar diff_sec = sec2 - sec1;\n\t\t\n\t\tif (diff_hour<0) {\n            diff_hour+= 24;\n        }\n        if (diff_min<0) {\n            diff_min+=60;\n            diff_hour--;\n        }if(diff_min>=60){\n            diff_min-=60;\n            diff_hour++;\n        }\n        if (diff_sec<0) {\n            diff_sec+=60;\n            diff_min--;\n        } else if(diff_sec>=60){\n            diff_sec-=60;\n            diff_min++;\n        }\n\t\n        \n       frappe.model.set_value(cdt,cdn,\"total_hoursafternoon\",diff_hour+\":\"+diff_min+\":\"+diff_sec);\n\t   frm.refresh_field(\"total_hoursafternoon\");\n    }\n},\nendtime: function (cur_frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    var hours=0;\n    var minutes=0;\n    var seconds=0;\n    console.log(cdt, cdn, d.starttime, d.endtime, d.shift_hours);\n\n    if (d.starttime && d.endtime) {\n        \n\t\t\n\t    var hour1 = d.starttime.split(':')[0];\n        var hour2 = d.endtime.split(':')[0];\n        var min1 = d.starttime.split(':')[1];\n        var min2 = d.endtime.split(':')[1];\n\t\tvar sec1 = d.starttime.split(':')[2];\n        var sec2 = d.endtime.split(':')[2];\n\t\t\n\t\tvar diff_hour = hour2 - hour1;\n\t\tvar diff_min = min2 - min1;\n\t\tvar diff_sec = sec2 - sec1;\n\t\t\n\t\tif (diff_hour<0) {\n            diff_hour+= 24;\n        }\n        if (diff_min<0) {\n            diff_min+=60;\n            diff_hour--;\n        }if(diff_min>=60){\n            diff_min-=60;\n            diff_hour++;\n        }\n        if (diff_sec<0) {\n            diff_sec+=60;\n            diff_min--;\n        } else if(diff_sec>=60){\n            diff_sec-=60;\n            diff_min++;\n        }\n\t\t\n      frappe.model.set_value(cdt,cdn,\"total_hoursafternoon\",diff_hour+\":\"+diff_min+\":\"+diff_sec);\n\t   frm.refresh_field(\"total_hoursafternoon\");\n    }\n},\nstart_time_: function (cur_frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    var hours=0;\n    var minutes=0;\n    var seconds=0;\n   \n    if (d.start_time_ && d.end_time_) {\n        \n\t\t\n\t    var hour1 = d.start_time_.split(':')[0];\n        var hour2 = d.end_time_.split(':')[0];\n        var min1 = d.start_time_.split(':')[1];\n        var min2 = d.end_time_.split(':')[1];\n\t\tvar sec1 = d.start_time_.split(':')[2];\n        var sec2 = d.end_time_.split(':')[2];\n\t\t\n\t\tvar diff_hour = hour2 - hour1;\n\t\tvar diff_min = min2 - min1;\n\t\tvar diff_sec = sec2 - sec1;\n\t\t\n\t\tif (diff_hour<0) {\n            diff_hour+= 24;\n        }\n        if (diff_min<0) {\n            diff_min+=60;\n            diff_hour--;\n        }if(diff_min>=60){\n            diff_min-=60;\n            diff_hour++;\n        }\n        if (diff_sec<0) {\n            diff_sec+=60;\n            diff_min--;\n        } else if(diff_sec>=60){\n            diff_sec-=60;\n            diff_min++;\n        }\n\t\n        \n       frappe.model.set_value(cdt,cdn,\"total_hourseveningnight\",diff_hour+\":\"+diff_min+\":\"+diff_sec);\n\t   frm.refresh_field(\"total_hourseveningnight\");\n    }\n},\nend_time_: function (cur_frm, cdt, cdn) {\n    var d = locals[cdt][cdn];\n    var hours=0;\n    var minutes=0;\n    var seconds=0;\n    console.log(cdt, cdn, d.start_time_, d.endtime, d.shift_hours);\n\n    if (d.start_time_ && d.end_time_) {\n        \n\t\t\n\t    var hour1 = d.start_time_.split(':')[0];\n        var hour2 = d.end_time_.split(':')[0];\n        var min1 = d.start_time_.split(':')[1];\n        var min2 = d.end_time_.split(':')[1];\n\t\tvar sec1 = d.start_time_.split(':')[2];\n        var sec2 = d.end_time_.split(':')[2];\n\t\t\n\t\tvar diff_hour = hour2 - hour1;\n\t\tvar diff_min = min2 - min1;\n\t\tvar diff_sec = sec2 - sec1;\n\t\t\n\t\tif (diff_hour<0) {\n            diff_hour+= 24;\n        }\n        if (diff_min<0) {\n            diff_min+=60;\n            diff_hour--;\n        }if(diff_min>=60){\n            diff_min-=60;\n            diff_hour++;\n        }\n        if (diff_sec<0) {\n            diff_sec+=60;\n            diff_min--;\n        } else if(diff_sec>=60){\n            diff_sec-=60;\n            diff_min++;\n        }\n\t\t\n      frappe.model.set_value(cdt,cdn,\"total_hourseveningnight\",diff_hour+\":\"+diff_min+\":\"+diff_sec);\n\t   frm.refresh_field(\"total_hourseveningnight\");\n    }\n},\nbefore_save:function(frm,cdt,cdn){\n    var d = locals[cdt][cdn];\n    \n    var a = parseInt(d.total_hourseveningnight)\n    var b = parseInt(d.total_hoursafternoon)\n    var c = parseInt(d.total_hoursmorning)\n    \n    \n    var a1 = parseInt(d.total_hourseveningnight.split(\":\")[1])\n    var b1 = parseInt(d.total_hoursafternoon.split(\":\")[1])\n    var c1 =  parseInt(d.total_hoursmorning.split(\":\")[1])\n    var hour_total =a +b +c\n    // alert(hour_total + \"total Hours\")\n    var tot = a1 + b1 + c1\n    // alert(tot + \"total Min\")\n    \n    var Total=\"\"\n    if(tot > 60)\n    {\n        var min = tot/60\n        alert(min + \"  total min\")\n        var fract = min * 10 % 10 /10; //0.2\n        var integr = min - fract; //3\n        \n        hour_total=hour_total + integr\n        \n        var m = integr* 60\n        \n        tot=tot-m\n       \n        Total = hour_total + \":\" + tot + \":00\"\n        \n       \n    }\n    else\n    {\n        Total = hour_total + \":\" + tot + \":00\"\n        alert(Total)\n    }\n    \n   \n  frm.set_value(\"total_working_hours\",Total)\n  alert(d.total_working_hours)\n    \n    \n},\nstart_kmhr:function(frm) {\n\t\tvar a = frm.doc.start_kmhr\n\t\tvar b = frm.doc.end_kmhr\n\t\tvar c = b - a;\n\t\tif(frm.doc.end_kmhr!=\"\"){\n\t\tif(a>b){\n\t\t    alert(\"Please enter proper values\")\n\t\t    validated=false\n\t\t}\n\t\telse{\n\t\tfrm.set_value('total_kmhr', c)\n\t\t}\n\t\t}\n\t\t\n\t},\n\t\tend_kmhr:function(frm) {\n\t\tvar a = frm.doc.start_kmhr\n\t\tvar b = frm.doc.end_kmhr\n\t\tvar c = b - a;\n\t\t\n\t\tif(a>b){\n\t\t    alert(\"Please enter proper values\")\n\t\t    validated=false\n\t\t}\n\t\telse{\n\t\tfrm.set_value('total_kmhr', c)\n\t\t\n\t\t}\n\t\t\n\t}\n\n\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-02-04 16:12:49.530066",
  "module": "Migoo CRM",
  "name": "Fetch time Sheet",
  "script": "\nfrappe.ui.form.on('Sales Invoice', {\n\trefresh: function (frm) {\n\t\tsetTimeout(() => {\n\t\t\tfrm.remove_custom_button('Fetch Timesheet');\n\t\t}, 0.2);\n\n\t\tif (frm.doc.docstatus === 0 && !frm.doc.is_return) {\n\t\t\tfrm.add_custom_button(__(\"Get Log Sheet\"), function () {\n\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\ttitle: __(\"Get Log Sheet\"),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": __(\"From\"),\n\t\t\t\t\t\t\t\"fieldname\": \"from_time\",\n\t\t\t\t\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": __(\"Equipment\"),\n\t\t\t\t\t\t\t\"fieldname\": \"equipment\",\n\t\t\t\t\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\t\t\t\t\"options\": \"Item\",\n\t\t\t\t\t\t\t\"reqd\": 1\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t\t\t\tfieldname: \"col_break_1\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": __(\"To\"),\n\t\t\t\t\t\t\t\"fieldname\": \"to_time\",\n\t\t\t\t\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": __(\"Customer\"),\n\t\t\t\t\t\t\t\"fieldname\": \"customer\",\n\t\t\t\t\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\t\t\t\t\"options\": \"Customer\",\n\t\t\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\t\t\"default\": frm.doc.customer\n\t\t\t\t\t\t},\n\n\t\t\t\t\t],\n\t\t\t\t\tprimary_action: function () {\n\t\t\t\t\t\tconst data = d.get_values();\n\t\t\t\t\t\tfrm.events.get_sheet_data(frm, data);\n\t\t\t\t\t\td.hide();\n\n\t\t\t\t\t},\n\n\t\t\t\t\tprimary_action_label: __(\"Get Data\")\n\t\t\t\t});\n\t\t\t\td.show();\n\t\t\t});\n\t\t}\n\t\tvar time = 0.00;\n\t\tvar min = 0.00;\n\t\tvar total1 = 0\n\t\tvar main_total = 0\n\t\tvar main_time = 0\n\t\tvar main_time1 = 0\n\t\tvar main_min = 0\n\t\t$.each(frm.doc.log_sheet_details || [], function (i, d) {\n\t\t\tvar min1 = parseInt(d.total_working_time.split(':')[1]);\n\t\t\tvar a = parseInt(d.total_working_time);\n\t\t\tvar equipment = d.equipment_name;\n\t\t\t$.each(frm.doc.items || [], function (i, d) {\n\t\t\t\tvar item = d.item_code;\n\n\t\t\t\tif (equipment == item) {\n\t\t\t\t\t//   alert(d.qty)\n\t\t\t\t\tif (d.qty == 0) {\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t\ttime1 = 0;\n\t\t\t\t\t\tmin = 0;\n\t\t\t\t\t\ttotal = 0;\n\t\t\t\t\t\ttotal1 = 0;\n\t\t\t\t\t\ttime = time + a;\n\t\t\t\t\t\tvar time1 = time * 60;\n\t\t\t\t\t\tmin = min + min1;\n\t\t\t\t\t\tvar total = time1 + min;\n\t\t\t\t\t\ttotal1 = total / 60;\n\t\t\t\t\t\td.hours = total1;\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttime = time + a;\n\t\t\t\t\t\tvar time1 = time * 60;\n\t\t\t\t\t\tmin = min + min1;\n\t\t\t\t\t\tvar total = time1 + min;\n\t\t\t\t\t\ttotal1 = total / 60;\n\n\t\t\t\t\t\td.hours = total1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmain_time = main_time + a;\n\t\t\t\tvar main_time1 = time * 60;\n\t\t\t\tmain_min = main_min + main_min;\n\t\t\t\tvar total = main_time1 + min;\n\t\t\t\tmain_total = total / 60;\n\t\t\t});\n\t\t});\n\t},\n\tget_sheet_data(frm, data) {\n\t\treturn frappe.call({\n\t\t\tmethod: \"get_customer_wise_sheet\",\n\t\t\targs: {\n\t\t\t\t\"name\": frm.doc.name,\n\t\t\t\t\"from_time\": data.from_time,\n\t\t\t\t\"to_time\": data.to_time,\n\t\t\t\t\"equipment\": data.equipment,\n\t\t\t\t\"customer\": data.customer,\n\t\t\t}\n\t\t}).then(r => {\n\t\t\twindow.location.reload()\n\t\t});\n\t},\n\tbefore_submit: function (frm) {\n\t\tvar main_total = 0\n\t\tvar main_time = 0\n\t\tvar main_time1 = 0\n\t\tvar main_min = 0\n\t\t$.each(frm.doc.log_sheet_details || [], function (i, d) {\n\t\t\tvar breck_min1 = parseInt(d.idle_hours);\n\t\t\tvar aa = parseInt(d.breck_down_hours);\n\n\t\t\tmain_time = main_time + aa;\n\n\t\t\tmain_min = main_min + breck_min1;\n\t\t})\n\t\tfrm.set_value(\"total_breakdown_hours\", main_time)\n\t\tfrm.set_value(\"total_idle_hours\", main_min)\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-02-06 11:11:52.566115",
  "module": "Migoo CRM",
  "name": "verify to set time",
  "script": "frappe.ui.form.on('Supplier', {\n\tverify:function(frm) {\n\t\tif(frm.doc.verify ===\"Verify\")\n\t\t{\n\t\t    frm.set_value('verify_time',frappe.datetime.now_datetime())\n\t\t}\n\t\telse if(frm.doc.verify ===\"Not Verify\")\n\t\t{\n\t\t     frm.set_value('verify_time',\"\")\n\t\t}\n\t\telse if(frm.doc.verify ===\"\")\n\t\t{\n\t\t     frm.set_value('verify_time',\"\")\n\t\t}\n\t},\n\tbefore_save:function(frm)\n\t{\n\t    if(frm.doc.verify ===\"Not Verify\")\n\t\t{\n\t\t    frm.set_value('verify_time',\"\")\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-02-16 16:09:10.309814",
  "module": "Migoo CRM",
  "name": "equipment verify time",
  "script": "frappe.ui.form.on('Item', {\n\tequipment_verify: function (frm) {\n\t\tif (frm.doc.equipment_verify === \"Verify\") {\n\t\t\tfrm.set_value('verify_time', frappe.datetime.now_datetime())\n\t\t}\n\t\telse if (frm.doc.equipment_verify === \"Not Verify\") {\n\t\t\tfrm.set_value('verify_time', \"\")\n\t\t}\n\t\telse if (frm.doc.equipment_verify === \"\") {\n\t\t\tfrm.set_value('verify_time', \"\")\n\t\t}\n\t},\n\tbefore_save: function (frm) {\n\t\tif (frm.doc.equipment_verify === \"Not Verify\") {\n\t\t\tfrm.set_value('verify_time', \"\")\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Notification Log",
  "enabled": 0,
  "modified": "2023-02-13 18:43:56.684646",
  "module": null,
  "name": "1st date notification",
  "script": "frappe.ui.form.on('Notification Log', {\n  refresh(frm) {\n    console.log(\"trying to working\");\n    var date = new Date();\n    // console.log(date)\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    // console.log(firstDay)\n    if (date != firstDay){\n      console.log(\"palak\");}\n    //   frappe.new_doc(\"Notification Log\",{\n    // \"subject\": \"Reminder For Create Sales Invoice\",\n    // \"reference_doctype\": \"Sales Invoice\",\n    //   });\n    cur_frm.save();\n  }\n});",
  "view": "Form"
 }
]